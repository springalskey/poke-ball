#!/usr/bin/env node

/**
 * 针对3级目录，create项目模块
 */
var program = require('commander');
var child_process = require('child_process');
var colors = require('colors');
var ejs = require('ejs');

var version = require('../package.json').version;
var FileTools = require('../tools/file.js').FileTools;
var DirTools = require('../tools/file.js').DirTools;
var path = require('../tools/path');
require('../tools/string');

program.parse(process.argv);

var args = program.args;
var moduleName = args[0];
var data = moduleName.split('/');

if (data.length != 3) {
  console.log('请输入完整的3级路径，如:kk views siri/order/list'.red);
  return;
}

var views = data[0];
var subViews = data[1];
var leafViews = data[2];

// 叶子模块存在，直接报错，return
if (DirTools.isExist(`${path.SEED_SRC_VIEWS}/${views}/${subViews}/${leafViews}`)) {
  console.log('该叶子模块已经存在'.red);
  return;
}

// 子模块存在(叶子模块不存在)，create:叶子模块
if (DirTools.isExist(`${path.SEED_SRC_VIEWS}/${views}/${subViews}`)) {
  createLeafViews(views, subViews, leafViews);
  return;
}

// 模块存在（子模块&叶子模块不存在），create:子模块&叶子模块
if (DirTools.isExist(`${path.SEED_SRC_VIEWS}/${views}`)) {
  createSubViews(views, subViews, leafViews);
  createLeafViews(views, subViews, leafViews);
  return;
}

// 模块&子模块&叶子模块不存在，create:模块&子模块&叶子模块
if (!DirTools.isExist(`${path.SEED_SRC_VIEWS}/${views}`)) {
  createViews(views, subViews, leafViews);
  createSubViews(views, subViews, leafViews);
  createLeafViews(views, subViews, leafViews);
  return;
}

// create模块
function createViews(views, subViews, leafViews) {
  // 新建 src/views/{moduleName}文件夹
  DirTools.mkDir(`${path.SEED_SRC_VIEWS}/${views}`);
  console.log(`create ${path.SEED_SRC_VIEWS}/${views} `.green);

  // 新建 src/views/{moduleName}/index.js文件
  var content = FileTools.readFile(`${path.CLI_TEM_VIEWS}/index.js`).toString();
  FileTools.createFile(`${path.SEED_SRC_VIEWS}/${views}/index.js`, content);
  console.log(`create ${path.SEED_SRC_VIEWS}/${views}/index.js `.green);

  // 新建 src/layout/menus/{moduleName}Menu.vue 文件
  var content = FileTools.readFile(`${path.CLI_TEM_VIEWS}/menu.vue`).toString();
  content = content.replace(`{upViews}`,views.toBigCamelCase());
  FileTools.createFile(`${path.SEED_SRC_VIEWS}/layout/menus/${views}-menu.vue`, content);
  console.log(`create ${path.SEED_SRC_VIEWS}/layout/menus/${views}-menu.vue `.green);

  // 修改 src/views/index.js文件
  updateRootRoute(views, subViews, leafViews);

  // 修改 src/views/layout/index.vue 布局文件
  updateLayout(views, subViews, leafViews);

  return;
}

// create子模块
function createSubViews(views, subViews, leafViews) {
  // 新建 src/views/moduleName/subModuleName/文件夹
  DirTools.mkDir(`${path.SEED_SRC_VIEWS}/${views}/${subViews}`);
  console.log(`create ${path.SEED_SRC_VIEWS}/${views}/${subViews} `.green);

  // todo:修改src/layout/menus/{moduleName}Menu.vue 文件
  updateLayoutSubMenu(views, subViews, leafViews);
  return;
}

// create叶子模块
function createLeafViews(views, subViews, leafViews) {
  // 新建 叶子模块文件夹
  DirTools.mkDir(`${path.SEED_SRC_VIEWS}/${views}/${subViews}/${leafViews}`);
  console.log(`create ${path.SEED_SRC_VIEWS}/${views}/${subViews}/${leafViews} `.green);

  var config;
  if(FileTools.isExist(`${path.SEED_ROOT_PATH}/cli_tem_config.json`)){
    config = require(`${path.SEED_ROOT_PATH}/cli_tem_config.json`);
  }else {
    config = require('../template/views/config.json');
  }

  // 新建 叶子模块文件夹下的 {leafViews}.js文件
  var listContent = FileTools.readFile(`${path.CLI_TEM_VIEWS}/leafViews/list.js`).toString();
  listContent = listContent.replace(/{moduleName}/g, views.toLittleCamelCase());
  listContent = listContent.replace(/{ModuleName}/g, views.toBigCamelCase());
  listContent = renderHtml(listContent, config);
  FileTools.createFile(`${path.SEED_SRC_VIEWS}/${views}/${subViews}/${leafViews}/${leafViews}.js`, listContent);
  console.log(`create ${path.SEED_SRC_VIEWS}/${views}/${subViews}/${leafViews}/${leafViews}.js `.green);

  // 新建 叶子模块文件夹下的 index.vue,使用ejs模版
  var content = FileTools.readFile(`${path.CLI_TEM_VIEWS}/leafViews/index.vue`).toString();
  
  config.moduleName = leafViews;
  content = renderHtml(content, config);
  content = content.replace(/{moduleName}/g, leafViews);
  FileTools.createFile(`${path.SEED_SRC_VIEWS}/${views}/${subViews}/${leafViews}/index.vue`, content);
  console.log(`create ${path.SEED_SRC_VIEWS}/${views}/${subViews}/${leafViews}/index.vue `.green);

  // 修改 src/views/{moduleName}/index.js
  updateModuleRoute(views, subViews, leafViews);

  // 修改 src/views/layout/menus/{leafViews}Menu.vue
  updateLayoutMenu(views, subViews, leafViews);
  return;
}

// 在添加一个叶子模块时：修改 src/views/{moduleName}/index.js 模块路由文件
function updateModuleRoute(views, subViews, leafViews) {
  var content = FileTools.readFile(`${path.SEED_SRC_VIEWS}/${views}/index.js`).toString();
  content = content.replace(/\nexport default \[/,
    `import ${subViews.toBigCamelCase()}${leafViews.toBigCamelCase()} from './${subViews}/${leafViews}';

export default [
  { path: '/${views}/${subViews}/${leafViews}', component: ${subViews.toBigCamelCase()}${leafViews.toBigCamelCase()}, name: '${views}.${subViews}.${leafViews}' },`);
  FileTools.createFile(`${path.SEED_SRC_VIEWS}/${views}/index.js`, content);
  console.log(`update src/views/${moduleName}/index.js`.cyan);
}

// 添加一个叶子模块时：修改 src/views/layout/menus/{moduleName}Menu.vue
function updateLayoutMenu(views, subViews, leafViews) {
  var content = FileTools.readFile(`${path.SEED_SRC_VIEWS}/layout/menus/${views}-menu.vue`).toString();
  content = content.replace(`<!-- ${subViews} inject -->`,
    `<el-menu-item index="/${views}/${subViews}/${leafViews}" v-kk-permission="'${views.toLittleCamelCase()}.${subViews.toLittleCamelCase()}.${leafViews.toLocaleLowerCase()}'">${leafViews.toLittleCamelCase()}</el-menu-item>
        <!-- ${subViews} inject -->`);
  FileTools.createFile(`${path.SEED_SRC_VIEWS}/layout/menus/${views}-menu.vue`, content);
  console.log('update src/views/layout/menus/Menu.vue(add leafViews)'.cyan);
}

// 添加一个子模块时：修改src/views/layout/menus/{moduleName}Menu.vue
function updateLayoutSubMenu(views, subViews, leafViews) {
  var content = FileTools.readFile(`${path.SEED_SRC_VIEWS}/layout/menus/${views}-menu.vue`).toString();
  content  = content.replace(`</el-menu>`,
  `  <el-submenu index="${subViews.toLittleCamelCase()}">
        <template slot="title"><i class="el-icon-menu"></i>${subViews.toLittleCamelCase()}</template>
        <!-- ${subViews} inject -->
      </el-submenu>
    </el-menu>`);
  FileTools.createFile(`${path.SEED_SRC_VIEWS}/layout/menus/${views}-menu.vue`,content);
  console.log('update src/views/layout/menus/Menu.vue(add subViews)'.cyan);

  return;
}

// 在添加一个大模块时，修改src/views/index.js路由文件
function updateRootRoute(views, subViews, leafViews) {
  var content = FileTools.readFile(`${path.SEED_SRC_VIEWS}/index.js`).toString();
  content = content.replace(/\nexport default \[/,
    `\nimport ${views.toBigCamelCase()}Menu from './layout/menus/${views}-menu';
import ${views.toBigCamelCase()}Routes from './${views}';

export default [
  {
    path: '/${views}',
    name: '${views.toLittleCamelCase()}',
    component: ${views.toBigCamelCase()}Menu,
    children: ${views.toBigCamelCase()}Routes
  },`);
  FileTools.createFile(`${path.SEED_SRC_VIEWS}/index.js`, content);
  console.log('update src/views/index.js '.cyan);
}

// 在添加一个大模块时： 修改 src/views/layout/index.vue 布局文件
function updateLayout(views, subViews, leafViews) {
  var content = FileTools.readFile(`${path.SEED_SRC_VIEWS}/layout/index.vue`).toString();
  content = content.replace(/<\/el-menu>/,
    `  <el-menu-item index="/${views}"><i class="el-icon-message"></i>${views.toLittleCamelCase()}</el-menu-item>
      <\/el-menu>`);
  FileTools.createFile(`${path.SEED_SRC_VIEWS}/layout/index.vue`, content);
  console.log('update src/views/layout/index.vue '.cyan);
}

// ejs渲染模版
function renderHtml(str, config) {
  var data = ejs.compile(str)({
    config: config
  });
  data = data.replace(/^\s*[\r\n]/gm, "");
  return data;
}
