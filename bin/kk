#!/usr/bin/env node

var program = require('commander');
var child_process = require('child_process');
var colors = require('colors');

var version = require('../package.json').version;
var FileTools = require('../tools/file.js').FileTools;
var DirTools = require('../tools/file.js').DirTools;

function copyDir(src, dist) {
  try {
    child_process.spawn('cp', ['-r', src, dist]);
  } catch (e) {
    console.log(e);
  }
}

program
  .usage('[command] <options ...>')
  .version(version)
  .option('-n, --name', '项目名称')
  .option('-p, --path', '项目路径')
  .option('-v, --version', 'poke-ball version')

// <>必填参数，[]可选参数
// __dirname：当前执行文件所在目录; process.cwd():当前工作目录
program
  .command('new <projectName> [option1] [option2]')
  .description('create new project')
  .action(function(data, option1, option2) {
    console.log('args:', data);
    copyDir(__dirname + '/../vue', process.cwd() + '/' + data)
    console.log('create new project success:', data);
  })

program
  .command('module <moduleName>')
  .description('create module')
  .action(function(moduleName) {
    // 判断当前目录是否有效，有没有‘src’目录
    var dirList = DirTools.readDir(process.cwd());
    var isProjectPath = false;
    dirList.forEach(function(el) {
      if (el == 'src')
        isProjectPath = true;
    })
    if (!isProjectPath) {
      console.log('this is not a valid path'.red);
      return;
    }

    if (DirTools.isExist(`${process.cwd()}/src/views/${moduleName}`)) {
      console.log('该模块已存在'.red);
      return;
    }
    // 创建module Dir
    DirTools.mkDir(`${process.cwd()}/src/views/${moduleName}`);
    console.log(`create module directory ${moduleName} success`.green);

    // 创建module文件
    var content = FileTools.readFile(`${__dirname}/../template/module/index.js`).toString();
    content = content.replace(/{moduleName}/g, moduleName);
    FileTools.createFile(`${process.cwd()}/src/views/${moduleName}/index.js`, content);
    console.log(`create module file : index.js success`.green);

    // 创建 vuex action
    var content = FileTools.readFile(`${__dirname}/../template/action.js`).toString();
    content = content.replace(/{moduleName}/g, moduleName);
    content = content.replace(/{MODULENAME}/g, moduleName.toUpperCase());
    FileTools.createFile(`${process.cwd()}/src/vuex/actions/${moduleName}Action.js`, content);
    console.log(`create vuex action file:${moduleName}Action.js success`.green);

    // 创建 vuex modules
    var content = FileTools.readFile(`${__dirname}/../template/module.js`).toString();
    content = content.replace(/{MODULENAME}/g, moduleName.toUpperCase());
    FileTools.createFile(`${process.cwd()}/src/vuex/modules/${moduleName}Mutation.js`, content);
    console.log(`create vuex modules file:${moduleName}Mutation.js success`.green);

    console.log(`create  module: ${moduleName} success`.green);
  })

program
  .command('test <projectPath>')
  .description('test a project')
  .action(function(data) {
    console.log('test a project');
  })

program.parse(process.argv);

if (program.path) {
  console.log('cwd', process.cwd());
  console.log('__dirname', __dirname);
  console.log('__process.execPath', process.execPath);
}

if (program.joy) {
  console.log('program.joy');
}
